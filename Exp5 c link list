#include<stdio.h>
#include<stdlib.h>
struct node
{
    int data;
    struct node*next;
} ;
typedef struct node * nodeptr;
void insert(nodeptr r,int d)
{
    nodeptr t=(nodeptr)malloc(sizeof(struct node));
    t->data=d;
    if(r->next==0)
    {
        t->next=r;
        r->next=t;
    }
    else
    {
        t->next=r->next;
        r->next=t;
    }
}
void display(nodeptr r)
{
    if(r->next==r)
    {
        printf("the circular linked list is empty");
        return;
    }
    nodeptr t=r;
    printf("the elements are:\n");
    do
    {
        t=t->next;
        printf("%5d",t->data);
    }
    while(t->next!=r);
}
void search(nodeptr r,int k)
{
    int f=0;
    nodeptr t;
    t=r->next;
    while(t!=r)
    {
        if(t->data==k)
        {
            printf("\nelement is found");
            f=1;
            break;
        }
         t=t->next;
    }
     if(f==0)
    printf("element is not found");
}
void deleteelememt(nodeptr r,int e)
{
    if(r->next==r)
    {
        printf("the list is empty");
        return;
    }
    nodeptr t=r,t1=r->next;
    while(t1!=r)
    {
        if(t1->data==e)
        {
            t->next=t1->next;
            free(t1);
            printf("element deleted");
            return;
        }
        t=t1;
        t1=t1->next;
    }
}
int main()
{
nodeptr t=(nodeptr)malloc(sizeof(struct node));
int ch,d;
nodeptr r=t;
t->next=t;
while(1)
{
    printf("\n1.insert\n2.delete\n3.search\n4.display\n5.exit\nenter your choice:\t");
    scanf("%d",&ch);
    switch(ch)
    {

        case 1:printf("enter an element");
        scanf("%d",&d);
        insert(r,d);break;
        case 2:printf("enter an element");
        scanf("%d",&d);
        deleteelememt(r,d);break;
        case 3:printf("enter an element");
        scanf("%d",&d);
        search(r,d);break;
        case 4:display(r);break;
        case 5:exit(0);
    }
}
}
